# [DGM] Dragon's Maze pack generator

class DGM
	def initialize
		@mythic = [
			'Blood Baron of Vizkopa',
			'Council of the Absolute',
			'Deadbridge Chant',
			'Legion\'s Initiative',
			'Master of Cruelties',
			'Progenitor Mimic',
			'Ral Zarek',
			'Reap Intellect',
			'Savageborn Hydra',
			'Voice of Resurgence',
			]
		@rare = [
			'Renounce the Guilds',
			'Scion of Vitu-Ghazi',
			'Aetherling',
			'Trait Doctoring',
			'Blood Scrivener',
			'Pontiff of Blight',
			'Possibility Storm',
			'Pyrewild Shaman',
			'Renegade Krasis',
			'Skylasher',
			'Advent of the Wurm',
			'Boros Battleshaper',
			'Dragonshift',
			'Emmara Tandris',
			'Exava, Rakdos Blood Witch',
			'Gaze of Granite',
			'Lavinia of the Tenth',
			'Melek, Izzet Paragon',
			'Mirko Vosk, Mind Drinker',
			'Notion Thief',
			'Obzedat\'s Aid',
			'Plasm Capture',
			'Render Silent',
			'Ruric Thar, the Unbowed',
			'Sire of Insanity',
			'Tajic, Blade of the Legion',
			'Teysa, Envoy of Ghosts',
			'Varolz, the Scar-Striped',
			'Vorel of the Hull Clade',
			'Zhur-Taa Ancient',
			'Beck_Call',
			'Breaking_Entering',
			'Catch_Release',
			'Flesh_Blood',
			'Ready_Willing',
			]
		@uncommon = [
			'Ascended Lawmage',
			'Blast of Genius',
			'Blaze Commando',
			'Bred for the Hunt',
			'Bronzebeak Moa',
			'Carnage Gladiator',
			'Debt to the Deathless',
			'Feral Animist',
			'Fluxcharger',
			'Gleam of Battle',
			'Goblin Test Pilot',
			'Gruul War Chant',
			'Haunter of Nightveil',
			'Jelenn Sphinx',
			'Korozda Gorgon',
			'Krasis Incubation',
			'Maw of the Obzedat',
			'Putrefy',
			'Restore the Peace',
			'Rot Farm Skeleton',
			'Scab-Clan Giant',
			'Showstopper',
			'Sin Collector',
			'Species Gorger',
			'Spike Jester',
			'Trostani\'s Summoner',
			'Unflinching Courage',
			'Warleader\'s Helix',
			'Warped Physique',
			'Woodlot Crawler',
			'Alive_Well',
			'Armed_Dangerous',
			'Down_Dirty',
			'Far_Away',
			'Give_Take',
			'Profit_Loss',
			'Protect_Serve',
			'Toil_Trouble',
			'Turn_Burn',
			'Wear_Tear',
			]
		@common = [
			'Boros Mastiff',
			'Haazda Snare Squad',
			'Lyev Decree',
			'Maze Sentinel',
			'Riot Control',
			'Steeple Roc',
			'Sunspire Gatekeepers',
			'Wake the Reflections',
			'Hidden Strings',
			'Maze Glider',
			'Mindstatic',
			'Murmuring Phantasm',
			'Opal Lake Gatekeepers',
			'Runner\'s Bane',
			'Uncovered Clues',
			'Wind Drake',
			'Bane Alley Blackguard',
			'Crypt Incursion',
			'Fatal Fumes',
			'Hired Torturer',
			'Maze Abomination',
			'Rakdos Drake',
			'Sinister Possession',
			'Ubul Sar Gatekeepers',
			'Awe for the Guilds',
			'Clear a Path',
			'Maze Rusher',
			'Punish the Enemy',
			'Riot Piker',
			'Rubblebelt Maaka',
			'Smelt-Ward Gatekeepers',
			'Weapon Surge',
			'Battering Krasis',
			'Kraul Warrior',
			'Maze Behemoth',
			'Mending Touch',
			'Mutant\'s Prey',
			'Phytoburst',
			'Saruli Gatekeepers',
			'Thrashing Mossdog',
			'Armored Wolf-Rider',
			'Beetleform Mage',
			'Deputy of Acquittals',
			'Drown in Filth',
			'Morgue Burst',
			'Nivix Cyclops',
			'Pilfered Plans',
			'Tithe Drinker',
			'Viashino Firstblade',
			'Zhur-Taa Druid',
			'Azorius Cluestone',
			'Boros Cluestone',
			'Dimir Cluestone',
			'Golgari Cluestone',
			'Gruul Cluestone',
			'Izzet Cluestone',
			'Orzhov Cluestone',
			'Rakdos Cluestone',
			'Selesnya Cluestone',
			'Simic Cluestone',
			]
		@mythic_land = [
			'Maze\'s End',
			]
		@rare_land = [
			'Blood Crypt',
			'Breeding Pool',
			'Godless Shrine',
			'Hallowed Fountain',
			'Overgrown Tomb',
			'Sacred Foundry',
			'Steam Vents',
			'Stomping Ground',
			'Temple Garden',
			'Watery Grave',
			]
		@common_land = [
			'Azorius Guildgate',
			'Boros Guildgate',
			'Dimir Guildgate',
			'Golgari Guildgate',
			'Gruul Guildgate',
			'Izzet Guildgate',
			'Orzhov Guildgate',
			'Rakdos Guildgate',
			'Selesnya Guildgate',
			'Simic Guildgate',
			]
		@all = @mythic + @rare + @uncommon + @common + @mythic_land + @common_land
	end

	def generate
		mythic = rand(8) == 7
		foil = rand(4) == 3
		land_rnd = rand(121)
		land_mythic = land_rnd == 120
		land_rare = land_rnd >= 115
		a = mythic ? @mythic.shuffle[0..0] : @rare.shuffle[0..0]
		b = @uncommon.shuffle[0..2]
		c = foil ? @common.shuffle[0..8] : @common.shuffle[0..9]
		d = land_mythic ? @mythic_land.shuffle[0..0] : (land_rare ? @rare_land.shuffle[0..0] : @common_land.shuffle[0..0])
		e = foil ? @all.shuffle[0..0] : []
		a + b + c + d + e
	end
end
